{"version":3,"sources":["components/Section/Section.styles.js","components/Section/Section.jsx","components/Contacts/Contacts.styles.jsx","components/Contacts/Contacts.jsx","components/Form/Form.styles.js","components/Form/Form.jsx","components/Filter/Filter.styles.js","components/Filter/Filter.jsx","App.js","index.js"],"names":["Container","Title","Section","title","children","ContactItem","BtnDelete","BtnText","NumberText","Contacts","options","onDelete","map","id","name","number","size","type","onClick","WrapperForm","BtnAdd","Input","InputTitle","Form","state","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetForm","this","pattern","required","onChange","Component","ContactTitle","InputFind","Filter","App","contacts","filter","formSubmitHandler","data","find","contact","toLowerCase","alert","prevState","uuidv4","changeFilter","getVisibleContacts","normalizedFilter","includes","deleteContact","contactId","localStorage","getItem","parsedContatcs","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca890084.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\n\nexport const Container = styled.div`\nwidth: 500px;\nmargin: 0 auto;\n`;\n\nexport const Title = styled.h2`\nmargin-bottom: 20px;\ntext-align: center;\ncolor: #2d2b2b;\n`;","import PropTypes from \"prop-types\";\nimport { Container, Title } from \"./Section.styles\";\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    {children}\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import styled from '@emotion/styled/macro';\n\nexport const ContactItem = styled.li`\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\nmargin-bottom: 10px;\nlist-style: none;\ntransition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n&:hover {\n    color: #3561d0;\n}\n`;\n\nexport const BtnDelete = styled.button`\ndisplay: inline-flex;\nalign-items: center;\npadding: 5px;\nborder-color: transparent;\nborder-radius: 5px;\nbackground-color: #c7cace;\ntext-transform: uppercase;\ncursor: pointer;\n&:hover {\n    background-color: #3561d0;\n    color: #fff;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n`; \n\nexport const BtnText = styled.span`\nmargin-right: 5px;\n`;\n\nexport const NumberText = styled.span`\nmargin-right: 30px;\nmargin-left: 10px\n`;","import PropTypes from \"prop-types\";\nimport { ContactItem, BtnText, BtnDelete, NumberText } from \"./Contacts.styles\";\nimport { BsFillPersonDashFill } from \"react-icons/bs\";\nimport { BiWinkSmile } from \"react-icons/bi\";\n\nconst Contacts = ({ options, onDelete }) => (\n  <ul>\n    {options.map(({ id, name, number }) => {\n      return (\n        <ContactItem key={id}>\n          <BiWinkSmile size={18} />\n          {name}:<NumberText>{number}</NumberText>\n          <BtnDelete \n                type=\"button\"\n                onClick={() => onDelete(id)}>\n            <BtnText>Delete</BtnText>\n            <BsFillPersonDashFill size={16} />\n          </BtnDelete>\n        </ContactItem>\n      );\n    })}\n  </ul>\n);\n\nContacts.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default Contacts;\n","import styled from '@emotion/styled/macro';\n\nexport const WrapperForm = styled.div`\nmargin-bottom: 20px;\npadding: 20px;\nbox-shadow: 0px 1px 5px 1px rgba(34, 60, 80, 0.4);\n`;\n\nexport const BtnAdd = styled.button`\ndisplay: flex;\nalign-items: center;\npadding: 7px;\nborder-color: transparent;\nborder-radius: 5px;\nbackground-color: #c7cace;\ntext-transform: uppercase;\ntransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\ncursor: pointer;\n&:hover {\n    background-color: #3561d0;\n    color: #fff;\n}\n`;\n\nexport const BtnText = styled.span`\nmargin-right: 5px;\n`;\n\nexport const Container = styled.div`\nmargin-bottom: 15px;\n`;\n\nexport const Input = styled.input`\nborder-color: #a29f9f;\nborder-radius: 5px;\n&:hover {\n    border-color: #0741d3;\n}\n`;\n\nexport const InputTitle = styled.p`\nmargin-bottom: 10px;\n`;","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { WrapperForm, BtnAdd, BtnText, Container, Input, InputTitle} from \"./Form.styles\";\nimport { BsFillPersonPlusFill } from \"react-icons/bs\";\n\nclass Form extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleInputChange = (event) => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <WrapperForm>\n        <form onSubmit={this.handleSubmit}>\n          <Container>\n            <label>\n              <InputTitle>Name</InputTitle>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                value={this.state.name}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. \n                        Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                onChange={this.handleInputChange}\n              />\n            </label>\n          </Container>\n\n          <Container>\n            <label>\n              <InputTitle>Number</InputTitle>\n              <Input\n                type=\"tel\"\n                name=\"number\"\n                value={this.state.number}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, \n                        круглые скобки и может начинаться с +\"\n                required\n                onChange={this.handleInputChange}\n              />\n            </label>\n          </Container>\n\n          <BtnAdd type=\"submit\">\n            <BtnText>Add contact</BtnText>\n            <BsFillPersonPlusFill size={16} />\n          </BtnAdd>\n        </form>\n      </WrapperForm>\n    );\n  }\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string,\n  onChangeInput: PropTypes.func,\n};\n\nexport default Form;\n","import styled from '@emotion/styled/macro';\n\nexport const ContactTitle = styled.h3`\nmargin-bottom: 10px;\n`;\n\nexport const InputFind = styled.input`\nmargin-bottom: 20px;\nborder-color: #a29f9f;\nborder-radius: 5px;\n&:hover {\n    border-color: #0741d3;\n}\n`;","import PropTypes from \"prop-types\";\nimport { ContactTitle, InputFind } from \"./Filter.styles\";\n\nfunction Filter({ value, onChange }) {\n  return (\n    <div>\n      <ContactTitle>Find contacts by name</ContactTitle>\n        <InputFind\n            type=\"text\"\n            value={value}\n            onChange={onChange} />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { Component } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport Contacts from \"./components/Contacts/Contacts\";\nimport Form from \"./components/Form/Form\";\nimport Filter from \"./components/Filter/Filter\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContatcs = JSON.parse(contacts);\n\n    if (parsedContatcs) {\n      this.setState({\n        contacts: parsedContatcs,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  formSubmitHandler = (data) => {\n    const { contacts } = this.state;\n\n    if (\n      contacts.find(\n        (contact) => data.name.toLowerCase() === contact.name.toLowerCase()\n      )\n    ) {\n      alert(`${data.name} is already in contacts.`);\n    } else {\n      this.setState((prevState) => {\n        return {\n          contacts: [...prevState.contacts, { ...data, id: uuidv4() }],\n        };\n      });\n    }\n  };\n\n  changeFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <Form onSubmit={this.formSubmitHandler} />\n        </Section>\n\n        <Section title=\"Contacts\">\n          <Filter value={this.state.filter} onChange={this.changeFilter} />\n          <Contacts\n            options={visibleContacts}\n            onDelete={this.deleteContact}\n          ></Contacts>\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}